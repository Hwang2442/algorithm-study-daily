import java.util.*;
class Solution {
    public int[] solution(String[] operations) {
PriorityQueue<Integer> queue_max = new PriorityQueue<>(Comparator.reverseOrder()); //오름차순
        PriorityQueue<Integer> queue_min = new PriorityQueue<>(); // 내림차순
        for (int i = 0; i < operations.length; i++)
        {
            String[] oper = operations[i].split(" ");
            
            if (oper[0].equals("D") && queue_max.isEmpty()) continue;
            
                if (oper[0].equals("I"))
                {
                    int num = Integer.parseInt(oper[1]);
                    queue_max.offer(num);
                    queue_min.offer(num);
                }


                else if (oper[0].equals("D") && oper[1].equals("1"))
                {
                    int a=queue_max.poll();
                    queue_min.remove(a);
                }
                else
                {
                    int a=queue_min.poll();
                    queue_max.remove(a);
                }
        }

        if (queue_max.isEmpty()) return new int[] {0,0};
        else return new int[]{queue_max.poll(),queue_min.poll()};
    }
}
